stages:
  - Unit Tests
  - Build
  - Deploy




Back-End:
image: stefanscherer/node-windows
tags:
  - docker
stage: Unit Tests
before_script:
  - python3 -m pip install falcon
script:
  - cd parser
  - python3 -m unittest tests.api_tests -v

Build:
stage: Build
image: node:latest
tags:
  - docker
before_script:
  - npm install
  - mv parser/output/output.json src/assets/backup.json
  - mv parser/output/years.json src/assets/years.json
script:
  - npm run build
  - mkdir api
  - cp -r parser/* api/
artifacts:
paths:
  - build/
  - api/

Staging:
stage: Deploy
tags:
  - deploy
environment:
name: Staging
url: https://staging.connected-worlds.host
dependencies:
  - Build
script:
  # API
  - cp -r api/* /var/www/api-staging/
  - sudo systemctl restart api-staging.service
  # Front End
  - sudo cp -r build/* /var/www/staging.connected-worlds.host/html/
  - sudo nginx -t
  - sudo systemctl restart nginx
only:
  - staging

Production:
stage: Deploy
tags:
  - deploy
environment:
name: Production
url: https://connected-worlds.host
dependencies:
  - Build
script:
  # API
  - cp -r api/* /var/www/api-production/
  - sudo systemctl restart api-prodution.service
  # Front End
  - sudo cp -r build/* /var/www/connected-worlds.host/html/
  - sudo nginx -t
  - sudo systemctl restart nginx
only:
  - master

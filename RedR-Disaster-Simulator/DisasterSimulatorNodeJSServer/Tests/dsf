Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: true,
      endEmitted: true,
      reading: false,
      sync: true,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      paused: false,
      emitClose: true,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrain: 0,
      readingMore: true,
      decoder: [StringDecoder],
      encoding: 'utf8'
    },
    readable: false,
    _events: [Object: null prototype] {
      end: [Array],
      data: [Array],
      error: [Array],
      close: [Function: bound emit]
    },
    _eventsCount: 4,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: false,
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: null,
      _httpMessage: [ClientRequest],
      [Symbol(asyncId)]: 19,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: false,
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: null,
      _httpMessage: [ClientRequest],
      [Symbol(asyncId)]: 19,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
      'x-powered-by': 'Express',
      'accept-ranges': 'bytes',
      'cache-control': 'public, max-age=0',
      'last-modified': 'Thu, 05 Sep 2019 22:16:28 GMT',
      etag: 'W/"6ea-16d03801569"',
      'content-type': 'text/html; charset=UTF-8',
      'content-length': '1770',
      date: 'Tue, 17 Sep 2019 02:22:00 GMT',
      connection: 'close'
    },
    rawHeaders: [
      'X-Powered-By',
      'Express',
      'Accept-Ranges',
      'bytes',
      'Cache-Control',
      'public, max-age=0',
      'Last-Modified',
      'Thu, 05 Sep 2019 22:16:28 GMT',
      'ETag',
      'W/"6ea-16d03801569"',
      'Content-Type',
      'text/html; charset=UTF-8',
      'Content-Length',
      '1770',
      'Date',
      'Tue, 17 Sep 2019 02:22:00 GMT',
      'Connection',
      'close'
    ],
    trailers: {},
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '',
    method: null,
    statusCode: 200,
    statusMessage: 'OK',
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: false,
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: null,
      _httpMessage: [ClientRequest],
      [Symbol(asyncId)]: 19,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: false,
    _dumped: false,
    req: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      socket: [Socket],
      connection: [Socket],
      _header: 'GET / HTTP/1.1\r' +
        '\nHost: 127.0.0.1:51025\r' +
        '\nAccept-Encoding: gzip, deflate\r' +
        '\nUser-Agent: node-superagent/3.8.3\r' +
        '\nConnection: close\r' +
        '\n\r' +
        '\n',
      _onPendingData: [Function: noopPendingOutput],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      path: '/',
      _ended: true,
      res: [Circular],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      [Symbol(isCorked)]: false,
      [Symbol(outHeadersKey)]: [Object: null prototype]
    },
    text: '<!DOCTYPE html>\r' +
      '\n<html lang="en">\r' +
      '\n\r' +
      '\n<head>\r' +
      '\n\r' +
      '\n  <meta charset="utf-8">\r' +
      '\n  <meta name="viewport" content="width=device-width, initial-scale=1, ' +
      'shrink-to-fit=no">\r' +
      '\n  <meta name="description" content="">\r' +
      '\n  <meta name="author" content="">\r' +
      '\n\r' +
      '\n  <title>Redr Disaster Simulator</title>\r' +
      '\n\r' +
      '\n  <!-- Bootstrap core CSS -->\r' +
      '\n  <link href="styles/disaster-sim-style.css" type="text/css" ' +
      'rel="stylesheet">\r' +
      '\n\r' +
      '\n</head>\r' +
      '\n\r' +
      '\n<body>\r' +
      '\n\r' +
      '\n\r' +
      '\n\r' +
      '\n<script src="js/jquery.js"></script>\r' +
      '\n\r' +
      '\n  <!-- Navigation -->\r' +
      '\n  <nav class="navbar navbar-expand-lg navbar-light bg-light static-top ' +
      '"id="header">\r' +
      '\n\r' +
      '\n    <!--Colour Changer-->\r' +
      '\n    <script>\r' +
      '\n      $("#header").load("header.html", function (response,\r' +
      '\n                                                  status, http){\r' +
      '\n        document.getElementById("colourChooser").setAttribute("value", ' +
      'document.cookie);\r' +
      '\n      });\r' +
      '\n      document.documentElement.style.setProperty("--main-color", ' +
      'document.cookie);\r' +
      '\n    </script>\r' +
      '\n  </nav>\r' +
      '\n\r' +
      '\n\r' +
      '\n<script>\r' +
      '\n\r' +
      '\n</script>\r' +
      '\n\r' +
      '\n  <!-- Page Content -->\r' +
      '\n  <div class="container">\r' +
      '\n    <div class="row">\r' +
      '\n      <div class="col-lg-12 text-center">\r' +
      '\n        <h1 class="mt-5">Welcome To The Redr Disaster Simulator </h1>\r' +
      '\n        <br>\r' +
      '\n        <button type="button" class="btn btn-primary" ' +
      `onclick="window.location.href = 'hq-config'">Start A New ` +
      'Scenario</button>\r' +
      '\n        <button type="button" class="btn btn-primary"  ' +
      `onclick="window.location.href = 'hq-review'">Review A Scenario</button>\r` +
      '\n        <button type="button" class="btn btn-primary"  ' +
      `onclick="window.location.href = 'hq-create'">Create A Scenario</button>\r` +
      '\n    </div>\r' +
      '\n  </div>\r' +
      '\n  </div>\r' +
      '\n  \r' +
      '\n\r' +
      '\n  <!-- Footer -->\r' +
      '\n  <footer class="bg-light fixed-bottom" id="footer">\r' +
      '\n    <script>$("#footer").load("footer.html");</script>\r' +
      '\n  </footer>\r' +
      '\n\r' +
      '\n</body>\r' +
      '\n\r' +
      '\n</html>\r' +
      '\n'
  },
  request: Test {
    _events: [Object: null prototype] { end: [Function] },
    _eventsCount: 1,
    _maxListeners: undefined,
    _agent: false,
    _formData: null,
    method: 'get',
    url: 'http://127.0.0.1:51025/',
    _header: { 'user-agent': 'node-superagent/3.8.3' },
    header: { 'User-Agent': 'node-superagent/3.8.3' },
    writable: true,
    _redirects: 0,
    _maxRedirects: 5,
    cookies: '',
    qs: {},
    _query: [],
    qsRaw: [],
    _redirectList: [],
    _streamRequest: false,
    app: Server {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      _connections: 0,
      _handle: null,
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 40000,
      _connectionKey: '6::::0',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(asyncId)]: 17
    },
    _okCallback: [Function],
    req: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      useChunkedEncodingByDefault: false,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: 0,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      socket: [Socket],
      connection: [Socket],
      _header: 'GET / HTTP/1.1\r' +
        '\nHost: 127.0.0.1:51025\r' +
        '\nAccept-Encoding: gzip, deflate\r' +
        '\nUser-Agent: node-superagent/3.8.3\r' +
        '\nConnection: close\r' +
        '\n\r' +
        '\n',
      _onPendingData: [Function: noopPendingOutput],
      agent: [Agent],
      socketPath: undefined,
      method: 'GET',
      path: '/',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      [Symbol(isCorked)]: false,
      [Symbol(outHeadersKey)]: [Object: null prototype]
    },
    protocol: 'http:',
    host: '127.0.0.1:51025',
    _endCalled: true,
    _callback: [Function],
    res: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 200,
      statusMessage: 'OK',
      client: [Socket],
      _consuming: false,
      _dumped: false,
      req: [ClientRequest],
      text: '<!DOCTYPE html>\r' +
        '\n<html lang="en">\r' +
        '\n\r' +
        '\n<head>\r' +
        '\n\r' +
        '\n  <meta charset="utf-8">\r' +
        '\n  <meta name="viewport" content="width=device-width, ' +
        'initial-scale=1, shrink-to-fit=no">\r' +
        '\n  <meta name="description" content="">\r' +
        '\n  <meta name="author" content="">\r' +
        '\n\r' +
        '\n  <title>Redr Disaster Simulator</title>\r' +
        '\n\r' +
        '\n  <!-- Bootstrap core CSS -->\r' +
        '\n  <link href="styles/disaster-sim-style.css" type="text/css" ' +
        'rel="stylesheet">\r' +
        '\n\r' +
        '\n</head>\r' +
        '\n\r' +
        '\n<body>\r' +
        '\n\r' +
        '\n\r' +
        '\n\r' +
        '\n<script src="js/jquery.js"></script>\r' +
        '\n\r' +
        '\n  <!-- Navigation -->\r' +
        '\n  <nav class="navbar navbar-expand-lg navbar-light bg-light ' +
        'static-top "id="header">\r' +
        '\n\r' +
        '\n    <!--Colour Changer-->\r' +
        '\n    <script>\r' +
        '\n      $("#header").load("header.html", function (response,\r' +
        '\n                                                  status, http){\r' +
        '\n        ' +
        'document.getElementById("colourChooser").setAttribute("value", ' +
        'document.cookie);\r' +
        '\n      });\r' +
        '\n      document.documentElement.style.setProperty("--main-color", ' +
        'document.cookie);\r' +
        '\n    </script>\r' +
        '\n  </nav>\r' +
        '\n\r' +
        '\n\r' +
        '\n<script>\r' +
        '\n\r' +
        '\n</script>\r' +
        '\n\r' +
        '\n  <!-- Page Content -->\r' +
        '\n  <div class="container">\r' +
        '\n    <div class="row">\r' +
        '\n      <div class="col-lg-12 text-center">\r' +
        '\n        <h1 class="mt-5">Welcome To The Redr Disaster Simulator ' +
        '</h1>\r' +
        '\n        <br>\r' +
        '\n        <button type="button" class="btn btn-primary" ' +
        `onclick="window.location.href = 'hq-config'">Start A New ` +
        'Scenario</button>\r' +
        '\n        <button type="button" class="btn btn-primary"  ' +
        `onclick="window.location.href = 'hq-review'">Review A ` +
        'Scenario</button>\r' +
        '\n        <button type="button" class="btn btn-primary"  ' +
        `onclick="window.location.href = 'hq-create'">Create A ` +
        'Scenario</button>\r' +
        '\n    </div>\r' +
        '\n  </div>\r' +
        '\n  </div>\r' +
        '\n  \r' +
        '\n\r' +
        '\n  <!-- Footer -->\r' +
        '\n  <footer class="bg-light fixed-bottom" id="footer">\r' +
        '\n    <script>$("#footer").load("footer.html");</script>\r' +
        '\n  </footer>\r' +
        '\n\r' +
        '\n</body>\r' +
        '\n\r' +
        '\n</html>\r' +
        '\n'
    },
    response: [Circular],
    called: true
  },
  req: ClientRequest {
    _events: [Object: null prototype] {
      drain: [Function],
      error: [Function],
      prefinish: [Function: requestOnPrefinish]
    },
    _eventsCount: 3,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: false,
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: null,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 19,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: false,
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      parser: null,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 19,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: 'GET / HTTP/1.1\r' +
      '\nHost: 127.0.0.1:51025\r' +
      '\nAccept-Encoding: gzip, deflate\r' +
      '\nUser-Agent: node-superagent/3.8.3\r' +
      '\nConnection: close\r' +
      '\n\r' +
      '\n',
    _onPendingData: [Function: noopPendingOutput],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      defaultPort: 80,
      protocol: 'http:',
      options: [Object],
      requests: {},
      sockets: [Object],
      freeSockets: {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256
    },
    socketPath: undefined,
    method: 'GET',
    path: '/',
    _ended: true,
    res: IncomingMessage {
      _readableState: [ReadableState],
      readable: false,
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      socket: [Socket],
      connection: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: [Object],
      rawHeaders: [Array],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 200,
      statusMessage: 'OK',
      client: [Socket],
      _consuming: false,
      _dumped: false,
      req: [Circular],
      text: '<!DOCTYPE html>\r' +
        '\n<html lang="en">\r' +
        '\n\r' +
        '\n<head>\r' +
        '\n\r' +
        '\n  <meta charset="utf-8">\r' +
        '\n  <meta name="viewport" content="width=device-width, ' +
        'initial-scale=1, shrink-to-fit=no">\r' +
        '\n  <meta name="description" content="">\r' +
        '\n  <meta name="author" content="">\r' +
        '\n\r' +
        '\n  <title>Redr Disaster Simulator</title>\r' +
        '\n\r' +
        '\n  <!-- Bootstrap core CSS -->\r' +
        '\n  <link href="styles/disaster-sim-style.css" type="text/css" ' +
        'rel="stylesheet">\r' +
        '\n\r' +
        '\n</head>\r' +
        '\n\r' +
        '\n<body>\r' +
        '\n\r' +
        '\n\r' +
        '\n\r' +
        '\n<script src="js/jquery.js"></script>\r' +
        '\n\r' +
        '\n  <!-- Navigation -->\r' +
        '\n  <nav class="navbar navbar-expand-lg navbar-light bg-light ' +
        'static-top "id="header">\r' +
        '\n\r' +
        '\n    <!--Colour Changer-->\r' +
        '\n    <script>\r' +
        '\n      $("#header").load("header.html", function (response,\r' +
        '\n                                                  status, http){\r' +
        '\n        ' +
        'document.getElementById("colourChooser").setAttribute("value", ' +
        'document.cookie);\r' +
        '\n      });\r' +
        '\n      document.documentElement.style.setProperty("--main-color", ' +
        'document.cookie);\r' +
        '\n    </script>\r' +
        '\n  </nav>\r' +
        '\n\r' +
        '\n\r' +
        '\n<script>\r' +
        '\n\r' +
        '\n</script>\r' +
        '\n\r' +
        '\n  <!-- Page Content -->\r' +
        '\n  <div class="container">\r' +
        '\n    <div class="row">\r' +
        '\n      <div class="col-lg-12 text-center">\r' +
        '\n        <h1 class="mt-5">Welcome To The Redr Disaster Simulator ' +
        '</h1>\r' +
        '\n        <br>\r' +
        '\n        <button type="button" class="btn btn-primary" ' +
        `onclick="window.location.href = 'hq-config'">Start A New ` +
        'Scenario</button>\r' +
        '\n        <button type="button" class="btn btn-primary"  ' +
        `onclick="window.location.href = 'hq-review'">Review A ` +
        'Scenario</button>\r' +
        '\n        <button type="button" class="btn btn-primary"  ' +
        `onclick="window.location.href = 'hq-create'">Create A ` +
        'Scenario</button>\r' +
        '\n    </div>\r' +
        '\n  </div>\r' +
        '\n  </div>\r' +
        '\n  \r' +
        '\n\r' +
        '\n  <!-- Footer -->\r' +
        '\n  <footer class="bg-light fixed-bottom" id="footer">\r' +
        '\n    <script>$("#footer").load("footer.html");</script>\r' +
        '\n  </footer>\r' +
        '\n\r' +
        '\n</body>\r' +
        '\n\r' +
        '\n</html>\r' +
        '\n'
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    [Symbol(isCorked)]: false,
    [Symbol(outHeadersKey)]: [Object: null prototype] {
      host: [Array],
      'accept-encoding': [Array],
      'user-agent': [Array]
    }
  },
  text: '<!DOCTYPE html>\r' +
    '\n<html lang="en">\r' +
    '\n\r' +
    '\n<head>\r' +
    '\n\r' +
    '\n  <meta charset="utf-8">\r' +
    '\n  <meta name="viewport" content="width=device-width, initial-scale=1, ' +
    'shrink-to-fit=no">\r' +
    '\n  <meta name="description" content="">\r' +
    '\n  <meta name="author" content="">\r' +
    '\n\r' +
    '\n  <title>Redr Disaster Simulator</title>\r' +
    '\n\r' +
    '\n  <!-- Bootstrap core CSS -->\r' +
    '\n  <link href="styles/disaster-sim-style.css" type="text/css" ' +
    'rel="stylesheet">\r' +
    '\n\r' +
    '\n</head>\r' +
    '\n\r' +
    '\n<body>\r' +
    '\n\r' +
    '\n\r' +
    '\n\r' +
    '\n<script src="js/jquery.js"></script>\r' +
    '\n\r' +
    '\n  <!-- Navigation -->\r' +
    '\n  <nav class="navbar navbar-expand-lg navbar-light bg-light static-top ' +
    '"id="header">\r' +
    '\n\r' +
    '\n    <!--Colour Changer-->\r' +
    '\n    <script>\r' +
    '\n      $("#header").load("header.html", function (response,\r' +
    '\n                                                  status, http){\r' +
    '\n        document.getElementById("colourChooser").setAttribute("value", ' +
    'document.cookie);\r' +
    '\n      });\r' +
    '\n      document.documentElement.style.setProperty("--main-color", ' +
    'document.cookie);\r' +
    '\n    </script>\r' +
    '\n  </nav>\r' +
    '\n\r' +
    '\n\r' +
    '\n<script>\r' +
    '\n\r' +
    '\n</script>\r' +
    '\n\r' +
    '\n  <!-- Page Content -->\r' +
    '\n  <div class="container">\r' +
    '\n    <div class="row">\r' +
    '\n      <div class="col-lg-12 text-center">\r' +
    '\n        <h1 class="mt-5">Welcome To The Redr Disaster Simulator </h1>\r' +
    '\n        <br>\r' +
    '\n        <button type="button" class="btn btn-primary" ' +
    `onclick="window.location.href = 'hq-config'">Start A New Scenario</button>\r` +
    '\n        <button type="button" class="btn btn-primary"  ' +
    `onclick="window.location.href = 'hq-review'">Review A Scenario</button>\r` +
    '\n        <button type="button" class="btn btn-primary"  ' +
    `onclick="window.location.href = 'hq-create'">Create A Scenario</button>\r` +
    '\n    </div>\r' +
    '\n  </div>\r' +
    '\n  </div>\r' +
    '\n  \r' +
    '\n\r' +
    '\n  <!-- Footer -->\r' +
    '\n  <footer class="bg-light fixed-bottom" id="footer">\r' +
    '\n    <script>$("#footer").load("footer.html");</script>\r' +
    '\n  </footer>\r' +
    '\n\r' +
    '\n</body>\r' +
    '\n\r' +
    '\n</html>\r' +
    '\n',
  body: {},
  files: undefined,
  buffered: true,
  headers: {
    'x-powered-by': 'Express',
    'accept-ranges': 'bytes',
    'cache-control': 'public, max-age=0',
    'last-modified': 'Thu, 05 Sep 2019 22:16:28 GMT',
    etag: 'W/"6ea-16d03801569"',
    'content-type': 'text/html; charset=UTF-8',
    'content-length': '1770',
    date: 'Tue, 17 Sep 2019 02:22:00 GMT',
    connection: 'close'
  },
  header: {
    'x-powered-by': 'Express',
    'accept-ranges': 'bytes',
    'cache-control': 'public, max-age=0',
    'last-modified': 'Thu, 05 Sep 2019 22:16:28 GMT',
    etag: 'W/"6ea-16d03801569"',
    'content-type': 'text/html; charset=UTF-8',
    'content-length': '1770',
    date: 'Tue, 17 Sep 2019 02:22:00 GMT',
    connection: 'close'
  },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'text/html',
  charset: 'UTF-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: []
}
image: node:latest





stages:
  - Test
  - Deploy
  - DeployTesting
  - code_quality
cache:
  paths:
    - node_modules/


testing_testing:
  stage: Test
  tags:
    - docker
  before_script:
    - cd RedR-Disaster-Simulator/DisasterSimulatorNodeJSServer
    - npm install
    - npm install supertest
  script:
    - npm test
  coverage: /All\sfiles.*?\s+(\d+.\d+)/

  
    
deploytesting:
  type: deploy
  tags:
    - deploy
  stage: Deploy
  image: ruby:latest
  script:
  - sudo apt-get update -qy
  - sudo apt-get install -y ruby-dev
  - sudo gem install dpl
  - cd RedR-Disaster-Simulator/DisasterSimulatorNodeJSServer
  - sudo dpl --provider=heroku --app=disaster-simulator-testing --api-key=$HEROKU_API_KEY
  only:
  - heroku-bug-fixes
  - lachlan-features-part3


production:
  type: deploy
  tags:
    - deploy
  stage: Deploy
  image: ruby:latest
  script:
  - sudo apt-get update -qy
  - sudo apt-get install -y ruby-dev
  - sudo gem install dpl
  - cd RedR-Disaster-Simulator/DisasterSimulatorNodeJSServer
  - sudo dpl --provider=heroku --app=redr-disaster-simulator --api-key=$HEROKU_API_KEY
  only:
  - master

include:
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  image: docker:stable
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env SOURCE_CODE="$PWD"
        --volume "$PWD":/code
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
